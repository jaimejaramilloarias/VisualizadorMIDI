1. [x] Configurar la estructura base del proyecto web (HTML, CSS, JS) y mostrar un canvas de 720px de alto junto a los menús superior e inferior sin funcionalidades.
2. [x] Implementar botón “Cargar MIDI/XML” y lógica básica para leer archivos MIDI/XML extrayendo note ON/OFF, duración, velocidad, tempo y nombres de pista.
3. [x] Implementar botón “Cargar WAV” y reproducción de audio, eliminando silencios iniciales y sincronizando el playhead con la animación.
4. [x] Crear estructura de datos que relacione cada pista con su instrumento y familia, asignando formas y colores predeterminados.
5. [x] Dibujar notas básicas en el canvas desplazándose de derecha a izquierda, alineadas con NOTE ON/OFF y la línea de presente al centro.
6. [x] Incorporar opacidad variable en los extremos, cambio brusco al 100% en la línea de presente y retorno progresivo al 5%.
7. [x] Añadir efectos de “bump” y “brillo” en el NOTE ON presente.
8. [x] Implementar figuras geométricas correspondientes a cada familia.
9. [x] Agregar controles de reproducción: Play/Stop (barra espaciadora), Adelantar, Atrasar e Inicio.
10. [x] Añadir opciones de aspecto 16:9 y 9:16, con soporte para pantalla completa y supermuestreo.
11. [x] Implementar menú inferior con dropdowns de Instrumento y Familia siempre visibles, y panel desplegable para personalizar color y figura por familia.
12. [x] Optimizar rendimiento y modularizar el código con comentarios claros para facilitar el desarrollo incremental.
13. [x] Implementar pruebas unitarias básicas para las funciones de parseo de archivos MIDI y MusicXML.
14. [x] Integrar la estructura de pistas con el menú inferior, poblando dinámicamente el dropdown de instrumentos según los archivos cargados.
15. [x] Renderizar rectángulos estáticos en el canvas representando notas basadas en eventos (subtarea de la 5).
16. [x] Animar las notas desplazándose de derecha a izquierda sincronizadas con el tiempo.
17. [x] Crear pruebas unitarias para la lógica de opacidad y efectos visuales.
18. [x] Crear pruebas unitarias para los controles de reproducción.
19. [x] Crear pruebas unitarias para el efecto de brillo en el NOTE ON.
20. [x] Implementar figuras geométricas alargadas para cada familia.
21. [x] Aplicar variaciones de tono de color por instrumento dentro de cada familia.
22. [x] Crear pruebas unitarias para las figuras geométricas alargadas.
23. [x] Crear pruebas unitarias para las variaciones de tono de color por instrumento.
24. [x] Ajustar representación de figuras no alargadas y tamaños especiales por familia (platillos +30%, auxiliares +30% bump, etc.).
25. [x] Crear pruebas unitarias para los modificadores de familia.
26. [x] Crear pruebas unitarias para la lógica de cambio de aspecto y pantalla completa.
27. [x] Permitir restablecer los colores y figuras personalizados de las familias a los valores predeterminados.
28. [x] Permitir exportar e importar la configuración de familias e instrumentos en archivos JSON.
29. [x] Crear pruebas unitarias para la exportación e importación de configuraciones.
30. [x] Refactorizar la lógica de la interfaz en módulos separados y crear pruebas de integración básicas.
31. [x] Optimizar el renderizado de notas utilizando técnicas de canvas offscreen.
32. [x] Modularizar la lógica de carga de archivos MIDI y WAV en componentes separados.
33. [x] Crear pruebas unitarias para el renderizado mediante canvas offscreen.
34. [x] Modularizar la lógica de reproducción de audio en un componente separado.
35. [x] Crear pruebas unitarias para la lógica modular de reproducción de audio.
36. [x] El color de fondo del canvas debe ser negro absoluto, pero en el panel inferior debe existir la posibilidad de cambiar el color del canvas.
37. [x] La línea de presente debe ser invisible.
38. [x] Las cápsulas deben ser rectángulos con esquinas redondeadas.
39. [x] El botón de play debe funcionar así esté cargado solo el MIDI/XML sin audio, o el audio sin MIDI/XML.
40. [x] La animación debe estar en 60 fps fijos SIEMPRE, y no depender de la frecuencia de la pantalla.
41. [x] La velocidad del midi debe salir del tempo map, y NO ser una velocidad constante.
42. [x] El brillo de las figuras al pasar por la línea de presente debe ser de tipo glow/blur, y parecer una sombra más que una línea definida.
43. [x] Los triángulos deben ser equiláteros con el ángulo superior al medio de la figura.
44. [x] En algún menú debe existir la posibilidad de activar o desactivar instrumentos para incluirlos o eliminarlos de la animación.
45. [x] Crear pruebas unitarias para la personalización del color del canvas.
46. [x] Corregir el bug que impedía aplicar el color de fondo seleccionado al canvas en cada frame.
47. [x] Crear pruebas unitarias para el botón Play funcionando con solo MIDI/XML o solo WAV.

48. [x] Crear pruebas unitarias para mantener la animación a 60 fps constantes.
49. [x] Crear pruebas unitarias para la reproducción basada en el tempo map.
50. [x] Crear pruebas unitarias para el efecto de brillo tipo glow/blur.
51. [x] Verificar mediante pruebas la geometría equilátera de los triángulos.
52. [x] Crear pruebas unitarias para la activación y desactivación de instrumentos en la animación.
53. [x] Eliminar pruebas unitarias redundantes para simplificar la suite.
54. [x] Persistir el estado de activación de instrumentos en la configuración local.
55. [x] Crear pruebas unitarias para la persistencia del estado de activación de instrumentos.
56. [x] Optimizar la conversión de ticks a segundos utilizando un mapa de tempo preprocesado.
57. [x] Modificar la altura de las figuras geométricas para que ocupen el 100% de una de las 88 divisiones verticales del canvas.
58. [x] Implementar una función para que la altura de las figuras varíe proporcionalmente a la velocidad MIDI, tomando como referencia que la velocidad 67 equivale al 100% de la altura predeterminada.
59. [x] Corregir el reconocimiento de tildes en los nombres de los instrumentos.
60. [x] Corregir la figura triángulo y triángulo alargado para que tengan su punto de alineación en su esquina izquierda.
61. [x] Crear el botón "Modo desarrollador" que habilite opciones avanzadas en el panel inferior.
62. [x] Permitir definir rangos de tono de color para las familias, eligiendo el color más brillante y el más oscuro para calcular matices intermedios.
63. [x] Agregar controles con porcentajes que modifiquen la escala de opacidad en los diferentes puntos del canvas.
64. [x] Agregar un control porcentual para manejar el tamaño, la difuminación y la duración del glow.
65. [x] Agregar un control porcentual para manejar la cantidad de bump y el tiempo de regreso al tamaño normal.
66. [x] Agregar un control para definir la velocidad base donde 67 (número editable) represente el 100%.
67. [x] Crear pruebas unitarias para la variación de altura basada en velocidad MIDI.
68. [x] Crear pruebas unitarias para el reconocimiento de tildes en los nombres de los instrumentos.
69. [x] Crear pruebas unitarias para los rangos de tono de color por familia.
70. [x] Crear pruebas unitarias para la escala de opacidad configurable.
71. [x] Crear pruebas unitarias para el control de tamaño, difuminación y duración del glow.
72. [x] Crear pruebas unitarias para el control de cantidad y duración del bump.
73. [x] Crear pruebas unitarias para la definición de la velocidad base.
74. [x] Persistir la velocidad base en la configuración local.
75. [x] Crear pruebas unitarias para la persistencia de la velocidad base.
76. [x] Incluir la velocidad base en la exportación e importación de configuraciones.
77. [x] Crear pruebas unitarias para la exportación e importación de la velocidad base.
78. [x] Asegurar que los controles del modo desarrollador permanezcan visibles tras reconstruir el panel de familias.
79. [x] Incluir los parámetros de opacidad, glow y bump en la exportación e importación de configuraciones.
80. [x] Crear pruebas unitarias para la exportación e importación de los parámetros de opacidad, glow y bump.
81. [x] Incluir los rangos de tono de color por familia en la exportación e importación de configuraciones.
82. [x] Crear pruebas unitarias para la exportación e importación de los rangos de tono de color por familia.
83. [x] Validar que los rangos de tono de color tengan contraste adecuado y que el color brillante sea más claro que el oscuro.
84. [x] Corregir la aplicación del rango de colores del modo desarrollador a las familias de instrumentos.
85. [x] Corregir el triángulo alargado para que su base se alinee con NOTE ON y NOTE OFF.
86. [x] Asegurar que la velocidad base escale proporcionalmente la altura y el bump de las figuras.
87. [x] Ajustar el código para que la velocidad MIDI base afecte la altura de las figuras: si la base es 67, la altura de la figura será el 100%, pero al leer la velocidad MIDI desde el archivo, la altura debe crecer y decrecer dinámicamente partiendo de la referencia base.
88. [x] Ajustar el layout del panel de familias y de desarrollador para que tenga una apariencia más organizada y limpia.
89. [x] Cambiar las fuentes de texto por algo con una apariencia más moderna.
90. [ ] Implementar acciones que mejoren la fluidez de la animación, manteniendo 60 fps fijos sin retrasos por bump o glow.
91. [x] Agregar un título: “Visualizador MIDI - Jaime Jaramillo Arias”.
92. [ ] Ajustar la detección de silencio del audio para que la visualización del MIDI comience exactamente con la señal de audio.
93. [ ] Mejorar en general la apariencia de la UI para que se vea más profesional.
94. [x] Crear pruebas unitarias para asegurar que la altura de las notas renderizadas se adapte según la velocidad MIDI.
